{"version":3,"sources":["webpack:///../../src/hooks/useTransitionState.js","webpack:///../../src/utils/triggerTransition.js","webpack:///../../src/components/TransitionObserver.js","webpack:///../../src/components/TransitionPortal.js","webpack:///../../src/components/TransitionLink.js","webpack:///../../src/hooks/useTriggerTransition.js","webpack:///../../src/utils/shouldNavigate.js","webpack:///../src/index.js","webpack:///../../src/hooks/index.js","webpack:///./src/pages/404.js"],"names":["useContext","publicContext","event","exit","entry","preventScrollJump","to","toSplit","hash","window","withPrefix","updateContext","inTransition","exitDelay","exitLength","appearAfter","exitState","trigger","length","delay","state","exitTrigger","entryLength","entryDelay","entryState","entryTrigger","entryProps","exitProps","e","setTimeout","navigate","linkState","replace","getMs","finalResetSeconds","Math","props","innerRef","useRef","context","useState","observerSupport","useEffect","observer","IntersectionObserver","observed","setObserving","thisObserved","threshold","updateContextState","portalRoot","document","PortalContainer","zIndex","level","className","style","position","top","left","constructor","render","this","styles","Component","forwardRef","TransitionLink","rest","activeStyle","activeClassName","partiallyActive","onClick","weShouldNavigate","shouldNavigate","triggerTransition","ref","PropTypes","exitFn","object","defaultOptions","Context","calledOptions","options","node","TimelineMax","y","opacity","autoAlpha","ease","Linear","easeIn"],"mappings":"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","file":"component---src-pages-404-js-bf16629fde49754c8ddd.js","sourcesContent":["import { useContext } from 'react'\nimport { publicContext } from '../context/createTransitionContext'\n\nconst useTransitionState = () => useContext(publicContext)\n\nexport { useTransitionState }\n","import { navigate, withPrefix } from 'gatsby'\nimport { setTimeout } from 'requestanimationframe-timer'\nimport { getMs } from './secondsMs'\nimport getPagesPromises from './getPagesPromises'\n\nconst triggerTransition = ({\n\tto,\n\tevent = null,\n\texit = {},\n\tentry = {},\n\tinTransition,\n\tpages,\n\ttrigger,\n\tupdateContext,\n\tlinkState,\n\treplace,\n\tpreventScrollJump,\n}) => {\n\tif (event) {\n\t\tevent.persist()\n\t\tevent.preventDefault()\n\t}\n\n\tif (inTransition) return false\n\n\tlet hash\n\n\t// handle anchor links to ID's\n\tif (to.includes('#')) {\n\t\tconst toSplit = to.split('#')\n\t\tto = toSplit[0]\n\t\thash = toSplit[1]\n\t}\n\n\t// these globals prevent the back button from being pressed during a transition as that can have unexpected results\n\twindow.__tl_inTransition = true\n\twindow.__tl_desiredPathname = withPrefix(to)\n\n\tupdateContext({\n\t\tinTransition: true,\n\t\texitDelay: 0,\n\t\texitLength: 0,\n\t\tappearAfter: 0,\n\t\texitState: {},\n\t})\n\n\tif (trigger && typeof trigger === 'function') {\n\t\ttrigger(pages)\n\t}\n\n\tconst {\n\t\tlength: exitLength = 0,\n\t\tdelay: exitDelay = 0,\n\t\tstate: exitState = {},\n\t\ttrigger: exitTrigger = () => {},\n\t} = exit\n\tconst {\n\t\tlength: entryLength = 1, // this allows scrollposition to be reset when there is no transition.\n\t\tdelay: entryDelay = 0,\n\t\tstate: entryState = {},\n\t\ttrigger: entryTrigger = () => {},\n\t\tappearAfter = 0,\n\t} = entry\n\n\tupdateContext({\n\t\tentryLength: entryLength,\n\t\tentryDelay: entryDelay,\n\t\texitLength: exitLength,\n\t\texitDelay: exitDelay,\n\t\tentryProps: entry,\n\t\texitProps: exit,\n\t\tappearAfter,\n\t\tpreventScrollJump,\n\t\texitTrigger: (exit, node, e) => exitTrigger(exit, node, e),\n\t\tentryTrigger: (entry, node, e) => entryTrigger(entry, node, e),\n\t\te: event,\n\t})\n\n\t// after exitDelay\n\tsetTimeout(() => {\n\t\tnavigate(to, {\n\t\t\tstate: {\n\t\t\t\t...linkState,\n\t\t\t},\n\t\t\treplace,\n\t\t})\n\n\t\tupdateContext({\n\t\t\texitState: exitState,\n\t\t\thash,\n\t\t})\n\t}, getMs(exitDelay))\n\n\tsetTimeout(() => {\n\t\t// wait for entryDelay before we add entry state\n\t\tupdateContext({ entryState: entryState })\n\t}, getMs(exitDelay + entryDelay))\n\n\t// reset entry animation times so they dont apply when using browser back/forward.\n\t//  this will be replaced with a better solution in the future\n\tsetTimeout(\n\t\t() =>\n\t\t\tupdateContext({\n\t\t\t\tentryDelay: 0,\n\t\t\t\tappearAfter: 0,\n\t\t\t\tentryLength: 0,\n\t\t\t}),\n\t\tgetMs(exitDelay + entryDelay + entryLength)\n\t)\n\n\tconst finalResetSeconds =\n\t\texitDelay + Math.max(exitLength, entryDelay + entryLength)\n\n\t// reset exit animation times so they dont apply when using browser back/forward.\n\t//  this will be replaced with a better solution in the future\n\tsetTimeout(() => {\n\t\t// these globals prevent the back button from being pressed during a transition as that can have unexpected results\n\t\twindow.__tl_inTransition = false\n\t\twindow.__tl_desiredPathname = false\n\t\twindow.__tl_back_button_pressed = false\n\n\t\tupdateContext({\n\t\t\texitDelay: 0,\n\t\t\texitLength: 0,\n\t\t\t// Once all animation is finished, it's safe to start a new animation since we're no longer inTransition.\n\t\t\tinTransition: false,\n\t\t\t// create new page promises for the trigger prop\n\t\t\t...getPagesPromises(),\n\t\t})\n\t}, getMs(finalResetSeconds) + 1)\n}\n\nexport { triggerTransition }\n","import { useRef, useContext, useEffect, useState } from 'react'\n\nimport { publicContext } from '../context/createTransitionContext'\n\nfunction TransitionObserver(props) {\n\tconst innerRef = useRef(null)\n\tconst context = useContext(publicContext)\n\tconst [contextState, updateContextState] = useState(null)\n\tconst [observing, setObserving] = useState(false)\n\n\tconst observerSupport =\n\t\t'IntersectionObserver' in window &&\n\t\t'IntersectionObserverEntry' in window &&\n\t\t'intersectionRatio' in window.IntersectionObserverEntry.prototype\n\n\tuseEffect(() => {\n\t\tif (innerRef && innerRef.current) {\n\t\t\tlet observer\n\n\t\t\tconst options = {\n\t\t\t\tthreshold: 1,\n\t\t\t}\n\n\t\t\tobserver = new IntersectionObserver(observed => {\n\t\t\t\tconst [thisObserved] = observed\n\t\t\t\tsetObserving(!!thisObserved.intersectionRatio)\n\t\t\t}, options)\n\t\t\tobserver.observe(innerRef.current)\n\n\t\t\treturn () => observer.unobserve(innerRef.current)\n\t\t}\n\t}, [innerRef])\n\n\tuseEffect(() => {\n\t\tif (!observerSupport || props.forceRender) {\n\t\t\t// always update the context if there is no intersection\n\t\t\t// observer support or if the prop forceRender is set to true\n\t\t\tupdateContextState(context)\n\t\t} else if (observing) {\n\t\t\tupdateContextState(context)\n\t\t}\n\t}, [context.transitionStatus, innerRef, observing])\n\n\treturn props.children(contextState, innerRef)\n}\n\nexport default TransitionObserver\n","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst portalRoot = typeof document !== `undefined` ? document.body : false\n\nconst PortalContainer = props => {\n\tconst zIndex = (function(level) {\n\t\tswitch (level) {\n\t\t\tcase 'bottom':\n\t\t\t\treturn 1000\n\t\t\tcase 'top':\n\t\t\t\treturn 1200\n\t\t\tdefault:\n\t\t\t\treturn 1100\n\t\t}\n\t})(props.level)\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"gatsby-plugin-transition-link-portal\"\n\t\t\tstyle={{\n\t\t\t\tposition: 'fixed',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\tzIndex: zIndex,\n\t\t\t}}>\n\t\t\t{props.children}\n\t\t</div>\n\t)\n}\n\nexport default class TransitionPortal extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.el =\n\t\t\ttypeof document !== `undefined`\n\t\t\t\t? document.createElement('section')\n\t\t\t\t: false\n\t}\n\n\tcomponentDidMount = () => {\n\t\tportalRoot && portalRoot.appendChild(this.el)\n\t}\n\n\tcomponentWillUnmount = () => {\n\t\tportalRoot && portalRoot.removeChild(this.el)\n\t}\n\n\trender() {\n\t\treturn this.el && portalRoot\n\t\t\t? ReactDOM.createPortal(\n\t\t\t\t\t<>\n\t\t\t\t\t\t{portalRoot && (\n\t\t\t\t\t\t\t<PortalContainer\n\t\t\t\t\t\t\t\tstyles={this.props.css}\n\t\t\t\t\t\t\t\tlevel={this.props.level}>\n\t\t\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t\t\t</PortalContainer>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>,\n\t\t\t\t\tthis.el\n\t\t\t  )\n\t\t\t: null\n\t}\n}\n","import React, { forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport { shouldNavigate } from '../utils/shouldNavigate'\nimport { triggerTransition } from '../utils/triggerTransition'\nimport { Consumer } from '../context/createTransitionContext'\n\nif (typeof forwardRef === 'undefined') {\n\tforwardRef = C => C\n}\n\nconst TransitionLink = forwardRef(\n\t(\n\t\t{\n\t\t\tto,\n\t\t\tchildren,\n\t\t\texit,\n\t\t\tentry,\n\t\t\tactiveStyle,\n\t\t\tpartiallyActive,\n\t\t\tstyle,\n\t\t\tclassName,\n\t\t\tactiveClassName,\n\t\t\tstate,\n\t\t\tonClick,\n\t\t\ttrigger,\n\t\t\treplace,\n\t\t\tinnerRef,\n\t\t\tpreventScrollJump,\n\t\t\t...rest\n\t\t},\n\t\tref\n\t) => {\n\t\treturn (\n\t\t\t<Consumer>\n\t\t\t\t{({ disableAnimation, ...context }) => (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tstyle={style}\n\t\t\t\t\t\tactiveStyle={activeStyle}\n\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\tactiveClassName={activeClassName}\n\t\t\t\t\t\tpartiallyActive={partiallyActive}\n\t\t\t\t\t\tonClick={event => {\n\t\t\t\t\t\t\t// If the user has set their browser or OS to prefers-reduced-motion\n\t\t\t\t\t\t\t// we should respect that.\n\t\t\t\t\t\t\tif (disableAnimation) {\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst weShouldNavigate = shouldNavigate(event)\n\n\t\t\t\t\t\t\tif (weShouldNavigate) {\n\t\t\t\t\t\t\t\ttriggerTransition({\n\t\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\t\tto,\n\t\t\t\t\t\t\t\t\texit,\n\t\t\t\t\t\t\t\t\tentry,\n\t\t\t\t\t\t\t\t\ttrigger,\n\t\t\t\t\t\t\t\t\treplace,\n\t\t\t\t\t\t\t\t\tpreventScrollJump,\n\t\t\t\t\t\t\t\t\tlinkState: state,\n\t\t\t\t\t\t\t\t\t...context,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (typeof onClick === 'function') {\n\t\t\t\t\t\t\t\tonClick(event, weShouldNavigate)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tto={to} // use gatsby link so prefetching still happens. this is prevent defaulted in triggertransition\n\t\t\t\t\t\tref={ref || innerRef}\n\t\t\t\t\t\t{...rest}>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</Link>\n\t\t\t\t)}\n\t\t\t</Consumer>\n\t\t)\n\t}\n)\n\nTransitionLink.propTypes = {\n\tto: PropTypes.string.isRequired,\n\texitLength: PropTypes.number,\n\tentryDelay: PropTypes.number,\n\texitFn: PropTypes.func,\n\tentryState: PropTypes.object,\n}\n\nexport { TransitionLink }\n","import { useContext } from 'react'\nimport { navigate } from 'gatsby'\nimport { Context } from '../context/createTransitionContext'\nimport { triggerTransition } from '../utils/triggerTransition'\n\nconst useTriggerTransition = defaultOptions => {\n\tconst context = useContext(Context)\n\tconst programmaticallyTriggerTransition = calledOptions => {\n\t\t// allow passing an event directly instead of options\n\t\tif (\n\t\t\tcalledOptions instanceof Event ||\n\t\t\t(calledOptions.nativeEvent &&\n\t\t\t\tcalledOptions.nativeEvent instanceof Event)\n\t\t) {\n\t\t\tcalledOptions = {\n\t\t\t\tevent: calledOptions,\n\t\t\t}\n\t\t}\n\n\t\tconst options = {\n\t\t\t...defaultOptions,\n\t\t\t...calledOptions,\n\t\t}\n\n\t\tif (context.disableAnimation) {\n\t\t\t// If the user has set their browser or OS to prefers-reduced-motion\n\t\t\t// we should respect that.\n\t\t\tif (options.event) {\n\t\t\t\toptions.event.persist()\n\t\t\t\toptions.event.preventDefault()\n\t\t\t}\n\t\t\tnavigate(options.to)\n\t\t} else {\n\t\t\ttriggerTransition({\n\t\t\t\t...context,\n\t\t\t\t...options,\n\t\t\t})\n\t\t}\n\t}\n\treturn programmaticallyTriggerTransition\n}\n\nexport { useTriggerTransition }\n","/*\n * adapted from @reach/router implementation:\n * defintion: https://github.com/reach/router/blob/master/src/index.js#L542-L545\n * usage: https://github.com/reach/router/blob/master/src/index.js#L391-L397\n */\n\nconst shouldNavigate = event =>\n\t!event.defaultPrevented &&\n\tevent.button === 0 &&\n\t!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n\nexport { shouldNavigate }\n","import { TransitionLink } from './components/TransitionLink'\nimport TransitionHandler from './components/TransitionHandler'\nimport { PublicConsumer as TransitionState } from './context/createTransitionContext'\nimport TransitionPortal from './components/TransitionPortal'\nimport TransitionObserver from './components/TransitionObserver'\nimport { useTriggerTransition } from './hooks'\n\nexport {\n\tTransitionHandler,\n\tTransitionState,\n\tTransitionPortal,\n\tTransitionObserver,\n\tuseTriggerTransition,\n}\nexport default TransitionLink\n","export { useTransitionState } from './useTransitionState'\nexport { useTriggerTransition } from './useTriggerTransition'\n","import React from \"react\"\nimport {Linear, TimelineMax} from \"gsap/all\"\nimport TransitionLink from \"gatsby-plugin-transition-link\"\n\n\nfunction exitPageHome(exit, node){\n  const tl = new TimelineMax();\n  tl.to(\"max-w-4xl\", .2, {y: '20px', opacity: 0, autoAlpha: 0, ease: Linear.easeIn})\n}\n\nexport default () => {\n  return (\n      <div className=\"max-w-4xl flex-grow mx-auto flex flex-col mt-40 item-center\">\n        <p className=\"text-2xl\">Page Not Found</p>\n        <br />          \n        <TransitionLink to=\"/\" exit={{ trigger: ({ exit, node }) => exitPageHome(exit, node), length: 1}}\n            entry={{ delay: 2}}><p>Return to Home</p></TransitionLink>\n      </div>\n  )\n}\n"],"sourceRoot":""}